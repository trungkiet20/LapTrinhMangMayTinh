<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Polymorphism on KyLLop Blog</title>
    <link>https://trungkiet20.github.io/LapTrinhMangMayTinh/tags/polymorphism/</link>
    <description>Recent content in Polymorphism on KyLLop Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Oct 2025 10:45:00 +0700</lastBuildDate>
    <atom:link href="https://trungkiet20.github.io/LapTrinhMangMayTinh/tags/polymorphism/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java: Đa hình (Polymorphism)</title>
      <link>https://trungkiet20.github.io/LapTrinhMangMayTinh/posts/js-4/</link>
      <pubDate>Mon, 20 Oct 2025 10:45:00 +0700</pubDate>
      <guid>https://trungkiet20.github.io/LapTrinhMangMayTinh/posts/js-4/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Đa hình (Polymorphism)&lt;/strong&gt; là một trong bốn đặc tính cơ bản của &lt;strong&gt;lập trình hướng đối tượng (OOP)&lt;/strong&gt; trong Java, cho phép &lt;strong&gt;một hành động có thể thể hiện theo nhiều cách khác nhau&lt;/strong&gt;.&lt;br&gt;&#xA;Nhờ đa hình, chương trình trở nên &lt;strong&gt;linh hoạt&lt;/strong&gt;, &lt;strong&gt;dễ mở rộng&lt;/strong&gt; và &lt;strong&gt;tái sử dụng tốt hơn&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-1-khái-niệm&#34;&gt;🧩 1. Khái niệm&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Polymorphism&lt;/strong&gt; có nghĩa là &lt;em&gt;nhiều hình dạng&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Trong Java, cùng một phương thức có thể hoạt động &lt;strong&gt;khác nhau&lt;/strong&gt; tùy theo &lt;strong&gt;đối tượng thực thi&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Có hai loại đa hình chính:&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Đa hình lúc biên dịch (Compile-time)&lt;/strong&gt; → qua &lt;em&gt;method overloading&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Đa hình lúc chạy (Runtime)&lt;/strong&gt; → qua &lt;em&gt;method overriding&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-2-ví-dụ-về-đa-hình-lúc-chạy-runtime-polymorphism&#34;&gt;⚙️ 2. Ví dụ về Đa hình lúc chạy (Runtime Polymorphism)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;-ví-dụ&#34;&gt;🔹 Ví dụ&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Lớp cha&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Animal&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;makeSound&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Động vật phát ra âm thanh...&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Lớp con 1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Dog&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; Animal {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;makeSound&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gâu gâu!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Lớp con 2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Cat&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; Animal {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;makeSound&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Meo meo!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Main&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Animal a1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Dog();  &lt;span style=&#34;color:#75715e&#34;&gt;// tham chiếu kiểu Animal, đối tượng Dog&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Animal a2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Cat();  &lt;span style=&#34;color:#75715e&#34;&gt;// tham chiếu kiểu Animal, đối tượng Cat&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        a1.&lt;span style=&#34;color:#a6e22e&#34;&gt;makeSound&lt;/span&gt;(); &lt;span style=&#34;color:#75715e&#34;&gt;// gọi phiên bản của Dog&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        a2.&lt;span style=&#34;color:#a6e22e&#34;&gt;makeSound&lt;/span&gt;(); &lt;span style=&#34;color:#75715e&#34;&gt;// gọi phiên bản của Cat&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Kết quả:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java: Kế thừa và đa hình</title>
      <link>https://trungkiet20.github.io/LapTrinhMangMayTinh/posts/java-3/</link>
      <pubDate>Fri, 17 Oct 2025 09:20:00 +0700</pubDate>
      <guid>https://trungkiet20.github.io/LapTrinhMangMayTinh/posts/java-3/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Kế thừa (Inheritance)&lt;/strong&gt; và &lt;strong&gt;Đa hình (Polymorphism)&lt;/strong&gt; là hai đặc tính quan trọng nhất trong lập trình hướng đối tượng (OOP).&lt;br&gt;&#xA;Chúng giúp bạn &lt;strong&gt;tái sử dụng mã&lt;/strong&gt;, &lt;strong&gt;mở rộng tính năng&lt;/strong&gt; và &lt;strong&gt;tăng khả năng linh hoạt&lt;/strong&gt; của chương trình.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-1-kế-thừa-trong-java-inheritance&#34;&gt;🧩 1. Kế thừa trong Java (Inheritance)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;-kế-thừa-là-gì&#34;&gt;🔹 Kế thừa là gì?&lt;/h3&gt;&#xA;&lt;p&gt;Kế thừa cho phép &lt;strong&gt;một lớp (class con)&lt;/strong&gt; sử dụng lại các thuộc tính và phương thức của &lt;strong&gt;một lớp khác (class cha)&lt;/strong&gt;.&lt;br&gt;&#xA;Điều này giúp giảm lặp mã và tạo ra cấu trúc phân cấp rõ ràng.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
